{"version":3,"sources":["COMPONENTS/AddCategory.js","HELPERS/getGifs.js","COMPONENTS/GifCollectionItem.js","COMPONENTS/GiftCollection.js","HOOKS/useFetchGifs.js","COMPONENTS/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","id","title","images","downsized_medium","GifCollectionItem","className","src","alt","GiftCollection","datos","cargando","estado","setEstado","useEffect","then","imagenes","setTimeout","useFetchGifs","imagen","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6KAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,SACXP,GAAc,SAAAQ,GAAU,OAAMN,GAAN,mBAAqBM,OAC7CL,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAlBa,SAACN,GACtBF,EAAcE,EAAEO,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,8DAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAH,GAAS,IAAD,EAC1B,MAAO,CACHI,GAAIJ,EAAKI,GACTC,MAAML,EAAKK,MACXT,IAAG,UAAEI,EAAKM,cAAP,aAAE,EAAaC,iBAAiBX,QAXxB,kBAeZM,GAfY,4CAAH,sDCYLM,EAVW,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBR,EAAgB,EAAhBA,IAAKS,EAAW,EAAXA,MAEjC,OACI,sBAAKI,UAAU,6CAAf,UACG,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCgBAO,EAnBQ,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAErB,ECHwB,SAACA,GAEzB,MAA4Bb,mBAAS,CACjCgC,MAAO,GACPC,UAAU,IAFd,mBAAOC,EAAP,KAAeC,EAAf,KAoBA,OAfAC,qBAAU,WACNxB,EAAQC,GAAWwB,MAAM,SAAAC,GAErBC,YAAW,WAEPJ,EAAU,CACNH,MAAMM,EACNL,UAAU,MAEhB,UAGP,CAACpB,IAGGqB,EDnB8BM,CAAa3B,GAAnCyB,EAAf,EAAQN,MAAiBC,EAAzB,EAAyBA,SAEzB,OACI,qCACI,6BAAKpB,IACHoB,GAAY,mBAAGL,UAAU,mCAAb,yBACd,qBAAKA,UAAU,YAAf,SAEQU,EAAShB,KAAI,SAAAmB,GAAM,OACf,cAAC,EAAD,eAAuCA,GAAfA,EAAOlB,aEaxCmB,EAxBM,WAEjB,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQQ,EAAWe,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,UAAWA,GADNA,Y,MCZjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.809044f8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategorias}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputValue = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (inputValue.trim())  {\n            setCategorias(categorias => [ inputValue, ...categorias])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type='text'\n                value={inputValue}\n                onChange={handleInputValue}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias : PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (categoria) => {\n\n    //encodeURI sirve para reemplazar los espacios en un string para codificarlo para una peticiÃ³n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=4&api_key=qNQwqyD2zE6yGbHCqvr9JpAaGvMiTNWQ`\n    const respuesta = await fetch(url)\n    const { data } = await respuesta.json()\n    \n    const gifs = data.map(json => {\n        return {\n            id: json.id,\n            title:json.title,\n            url: json.images?.downsized_medium.url\n        }\n    })\n\n    return gifs\n}  ","import React from 'react'\n\nconst GifCollectionItem = ({id, url, title}) => {\n\n    return (\n        <div className=\"card animate__animated animate__backInDown\">\n           <img src={url} alt={title}/>\n           <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifCollectionItem\n","import React from 'react'\nimport { useFetchGifs } from '../HOOKS/useFetchGifs';\nimport GifCollectionItem from './GifCollectionItem';\n\nconst GiftCollection = ({categoria}) => {\n\n    const { datos: imagenes, cargando} = useFetchGifs(categoria)\n\n    return (\n        <>\n            <h3>{categoria}</h3>\n            { cargando && <p className='animate__animated animate__flash'>Cargando...</p> }\n            <div className='card-grid'>\n                {\n                    imagenes.map(imagen => (\n                        <GifCollectionItem key={imagen.id} {...imagen}/>\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GiftCollection\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../HELPERS/getGifs\"\n\nexport const useFetchGifs = (categoria) => {\n\n    const [estado, setEstado] = useState({\n        datos: [],\n        cargando: true\n    })\n\n    useEffect(() => {\n        getGifs(categoria).then( imagenes => {\n\n            setTimeout(() => {\n                //console.log(imagenes)\n                setEstado({\n                    datos:imagenes, \n                    cargando: false\n                })\n            },3000)\n\n        })\n    }, [categoria])\n\n\n    return estado\n}\n\n","import React, { useState } from 'react'\nimport AddCategory from './AddCategory'\nimport GiftCollection from './GiftCollection'\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Drama'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategorias={setCategorias}/> \n            <hr />\n\n            <ol>\n                {\n                    categorias.map((categoria) => \n                        <GiftCollection \n                            key={categoria} \n                            categoria={categoria}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './COMPONENTS/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}